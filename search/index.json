[{"content":"一个简单的go示例\n1 2 3 4 5 6 7 8 9 10 package main import ( \u0026#34;fmt\u0026#34; \u0026#34;time\u0026#34; ) func main() { fmt.Println(time.Now().Format(\u0026#34;2006-01-02 15:04:05\u0026#34;)) } 输出：2022-08-04 09:43:56\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 const ( _ = iota stdLongMonth = iota + stdNeedDate // \u0026#34;January\u0026#34; stdMonth // \u0026#34;Jan\u0026#34; stdNumMonth // \u0026#34;1\u0026#34; stdZeroMonth // \u0026#34;01\u0026#34; stdLongWeekDay // \u0026#34;Monday\u0026#34; stdWeekDay // \u0026#34;Mon\u0026#34; stdDay // \u0026#34;2\u0026#34; stdUnderDay // \u0026#34;_2\u0026#34; stdZeroDay // \u0026#34;02\u0026#34; stdUnderYearDay // \u0026#34;__2\u0026#34; stdZeroYearDay // \u0026#34;002\u0026#34; stdHour = iota + stdNeedClock // \u0026#34;15\u0026#34; stdHour12 // \u0026#34;3\u0026#34; stdZeroHour12 // \u0026#34;03\u0026#34; stdMinute // \u0026#34;4\u0026#34; stdZeroMinute // \u0026#34;04\u0026#34; stdSecond // \u0026#34;5\u0026#34; stdZeroSecond // \u0026#34;05\u0026#34; stdLongYear = iota + stdNeedDate // \u0026#34;2006\u0026#34; stdYear // \u0026#34;06\u0026#34; stdPM = iota + stdNeedClock // \u0026#34;PM\u0026#34; stdpm // \u0026#34;pm\u0026#34; stdTZ = iota // \u0026#34;MST\u0026#34; stdISO8601TZ // \u0026#34;Z0700\u0026#34; // prints Z for UTC stdISO8601SecondsTZ // \u0026#34;Z070000\u0026#34; stdISO8601ShortTZ // \u0026#34;Z07\u0026#34; stdISO8601ColonTZ // \u0026#34;Z07:00\u0026#34; // prints Z for UTC stdISO8601ColonSecondsTZ // \u0026#34;Z07:00:00\u0026#34; stdNumTZ // \u0026#34;-0700\u0026#34; // always numeric stdNumSecondsTz // \u0026#34;-070000\u0026#34; stdNumShortTZ // \u0026#34;-07\u0026#34; // always numeric stdNumColonTZ // \u0026#34;-07:00\u0026#34; // always numeric stdNumColonSecondsTZ // \u0026#34;-07:00:00\u0026#34; stdFracSecond0 // \u0026#34;.0\u0026#34;, \u0026#34;.00\u0026#34;, ... , trailing zeros included stdFracSecond9 // \u0026#34;.9\u0026#34;, \u0026#34;.99\u0026#34;, ..., trailing zeros omitted stdNeedDate = 1 \u0026lt;\u0026lt; 8 // need month, day, year stdNeedClock = 2 \u0026lt;\u0026lt; 8 // need hour, minute, second stdArgShift = 16 // extra argument in high bits, above low stdArgShift stdSeparatorShift = 28 // extra argument in high 4 bits for fractional second separators stdMask = 1\u0026lt;\u0026lt;stdArgShift - 1 // mask out argument ) 所以，其实答案已经有了，我们对照一下我们的参数 2006-01-02 15:04:05，可以很简单在上述常量里面找到对应的常量：\n2006 =\u0026gt; stdLongYear 01 =\u0026gt; stdZeroMonth 02 =\u0026gt; stdZeroDay 15 =\u0026gt; stdHour 04 =\u0026gt; stdZeroMinute 05 =\u0026gt; stdZeroSecond 而 layout 参数里面的 - 以及 : 都会原样输出。 ","date":"2022-08-04T09:43:56Z","permalink":"https://zhanghony.github.io/p/environment/","title":"go 中如何格式化时间"},{"content":"","date":"2020-09-09T00:00:00Z","permalink":"https://zhanghony.github.io/p/environment/","title":"ganache安装"},{"content":"问题描述 github浏览器能打开，命令行却连不上\n查看代理命令 1 2 git config --global --get http.proxy git config --global --get https.proxy 取消代理命令 1 2 git config --global --unset http.proxy git config --global --unset https.proxy 配置http代理 1 2 git config --global http.proxy 127.0.0.1:7890 git config --global https.proxy 127.0.0.1:7890 ","date":"2020-09-09T00:00:00Z","permalink":"https://zhanghony.github.io/p/environment/","title":"github网络问题"},{"content":"","date":"2020-09-09T00:00:00Z","image":"https://zhanghony.github.io/post/environment/background.jpg","permalink":"https://zhanghony.github.io/p/solidity/","title":"solidity"}]